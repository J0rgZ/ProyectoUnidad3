name: Tarea Automatizada de ejecución de pruebas

env:
  PHP_VERSION: '8.2'  # Asegúrate de que es la versión de PHP que necesitas
  SONAR_ORG: 'jorge-briceno'
  SONAR_PROJECT: 'jorge-briceno_proyectounidad3'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  setup_and_test:
    name: Setup and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl  # Ajusta según las necesidades de tu proyecto
          coverage: xdebug

      - name: Instalar dependencias
        run: composer install --prefer-dist --no-progress
      
      - name: Hacer ejecutable PHPUnit
        run: chmod +x vendor/bin/phpunit

      - name: Ejecutar pruebas
        run: vendor/bin/phpunit --coverage-clover coverage.xml

  sonar_scan:
    name: SonarQube Scan
    needs: setup_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Download and configure SonarScanner
        run: |
          curl -sSLo sonarscanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonarscanner.zip
          mv sonar-scanner-4.6.2.2472-linux sonar-scanner
          echo "PATH=$PATH:$(pwd)/sonar-scanner/bin" >> $GITHUB_ENV

      - name: Run SonarScanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT }} \
            -Dsonar.organization=${{ env.SONAR_ORG }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.php.tests.reportPath=coverage.xml


